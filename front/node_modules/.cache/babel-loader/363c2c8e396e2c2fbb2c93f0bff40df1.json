{"ast":null,"code":"var _jsxFileName = \"/home/naty/Dev/App/movies-db/front/src/pages/Movie.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Movie = () => {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const API_URL = \"https://api.themoviedb.org/3/movie/{movie_id}\";\n  const fetchMovies = async () => {\n    const {\n      data: {\n        results\n      }\n    } = await axios.get(API_URL, {\n      params: {\n        api_key: \"e30a9a93aa4cdbed38f373e13824625b\"\n      }\n    });\n    console.log(results);\n    setMovies(results);\n  };\n  useEffect(() => {\n    fetchMovies();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: movies.map(movie => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"clearfix\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: `https://image.tmdb.org/t/p/w500/${movie.poster_path}`,\n        height: 400,\n        width: \"70%\",\n        className: \"col-md-6 float-md-start mb-3 ms-md-3\",\n        alt: \"...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: movie.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: movie.overview\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"As you can see the paragraphs gracefully wrap around the floated image. Now imagine how this would look with some actual content in here, rather than just this boring placeholder text that goes on and on, but actually conveys no tangible information at. It simply takes up space and should not really be read.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"And yet, here you are, still persevering in reading this placeholder text, hoping for some more insights, or some hidden easter egg of content. A joke, perhaps. Unfortunately, there's none of that here.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(Movie, \"MO6b3PSP3RIUqZ8gtSrBZBVtBbs=\");\n_c = Movie;\nexport default Movie;\nvar _c;\n$RefreshReg$(_c, \"Movie\");","map":{"version":3,"names":["useState","useEffect","axios","Movie","movies","setMovies","API_URL","fetchMovies","data","results","get","params","api_key","console","log","map","movie","poster_path","title","overview"],"sources":["/home/naty/Dev/App/movies-db/front/src/pages/Movie.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nconst Movie = () => {\n  const [movies, setMovies] = useState([]);\n  const API_URL = \"https://api.themoviedb.org/3/movie/{movie_id}\";\n\n  const fetchMovies = async () => {\n    const {\n      data: { results },\n    } = await axios.get(API_URL, {\n      params: {\n        api_key: \"e30a9a93aa4cdbed38f373e13824625b\",\n      },\n    });\n    console.log(results);\n    setMovies(results);\n  };\n  useEffect(() => {\n    fetchMovies();\n  }, []);\n\n  return (\n    <div className=\"container\">\n      {movies.map((movie) => (\n        <div className=\"clearfix\">\n          <img\n            src={`https://image.tmdb.org/t/p/w500/${movie.poster_path}`}\n            height={400}\n            width=\"70%\"\n            className=\"col-md-6 float-md-start mb-3 ms-md-3\"\n            alt=\"...\"\n          />\n          <h4>{movie.title}</h4>\n          <p>{movie.overview}</p>\n\n          <p>\n            As you can see the paragraphs gracefully wrap around the floated\n            image. Now imagine how this would look with some actual content in\n            here, rather than just this boring placeholder text that goes on and\n            on, but actually conveys no tangible information at. It simply takes\n            up space and should not really be read.\n          </p>\n\n          <p>\n            And yet, here you are, still persevering in reading this placeholder\n            text, hoping for some more insights, or some hidden easter egg of\n            content. A joke, perhaps. Unfortunately, there's none of that here.\n          </p>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default Movie;\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,OAAO;AAAC;AAE1B,MAAMC,KAAK,GAAG,MAAM;EAAA;EAClB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAMM,OAAO,GAAG,+CAA+C;EAE/D,MAAMC,WAAW,GAAG,YAAY;IAC9B,MAAM;MACJC,IAAI,EAAE;QAAEC;MAAQ;IAClB,CAAC,GAAG,MAAMP,KAAK,CAACQ,GAAG,CAACJ,OAAO,EAAE;MAC3BK,MAAM,EAAE;QACNC,OAAO,EAAE;MACX;IACF,CAAC,CAAC;IACFC,OAAO,CAACC,GAAG,CAACL,OAAO,CAAC;IACpBJ,SAAS,CAACI,OAAO,CAAC;EACpB,CAAC;EACDR,SAAS,CAAC,MAAM;IACdM,WAAW,EAAE;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,oBACE;IAAK,SAAS,EAAC,WAAW;IAAA,UACvBH,MAAM,CAACW,GAAG,CAAEC,KAAK,iBAChB;MAAK,SAAS,EAAC,UAAU;MAAA,wBACvB;QACE,GAAG,EAAG,mCAAkCA,KAAK,CAACC,WAAY,EAAE;QAC5D,MAAM,EAAE,GAAI;QACZ,KAAK,EAAC,KAAK;QACX,SAAS,EAAC,sCAAsC;QAChD,GAAG,EAAC;MAAK;QAAA;QAAA;QAAA;MAAA,QACT,eACF;QAAA,UAAKD,KAAK,CAACE;MAAK;QAAA;QAAA;QAAA;MAAA,QAAM,eACtB;QAAA,UAAIF,KAAK,CAACG;MAAQ;QAAA;QAAA;QAAA;MAAA,QAAK,eAEvB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAMI,eAEJ;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAII;IAAA;MAAA;MAAA;MAAA;IAAA,QAEP;EAAC;IAAA;IAAA;IAAA;EAAA,QACE;AAEV,CAAC;AAAC,GAlDIhB,KAAK;AAAA,KAALA,KAAK;AAoDX,eAAeA,KAAK;AAAC;AAAA"},"metadata":{},"sourceType":"module"}